#!/usr/bin/zsh
if [[ -f $HOME/.keys ]] then
    source $HOME/.keys
fi

export GOPATH="$HOME/go"
export GITHUB="$HOME/github"
export PATH="$PATH:$GOPATH/bin:$HOME/bin:$HOME/.gem/ruby/2.3.0/bin:$HOME/.local/bin:$HOME/.cargo/bin"
export EDITOR="/usr/bin/vim" # default to vim
export TERM="xterm-256color" # enable 256 colors
export VISUAL="/usr/bin/gvim" # unsure if working..

alias diff="git diff"
alias du="du -h"
alias l="ls -lh"
alias la="ls -Alh"
#alias vis="vis -c ~/.visrc"
alias svim="vim -u ~/.svimrc" # minimal version of vim
alias vmi="vim" # default to vim
alias gut="git" # correct me being a gut
alias :q="exit" # because vim is muscle memory
alias rmtmp="rm *~"
alias yaourt="yaourt --color"
alias yinstall="yaourt --color --noconfirm -S"
alias say="espeak -v german"
alias ccat="highlight -O ansi"

export VIMBG="Tomorrow-Night-Eighties" # default vim colorscheme

function upd() {
    yaourt -Syyau # aur update
}

export YTDIR="$HOME/Desktop/Youtube"
function ytd() {
    zsh ~/.ytd.sh
}

case $HOST in
    "think")
        function wallpaper {
            echo "\e[32massuming 1366x768px screen\e[0m"
            convert $1 -resize 1366x768! $2
        }
        function smartpaper {
            wallpaper $1 /tmp/$1
            setbg /tmp/$1 $2
        }
        ;;
    "tipc")
        function wallpaper {
            echo "\e[32massuming 3840x2160px screen\e[0m"
            convert $1 -resize 3840x2160 $2
            echo "4knoborder cutting on image"
            4knoborder.sh $2
        }
        ;;
    *)
        function wallpaper {
            # $1 is file
            # $2 is screen resolution
            #    e.g. 1920x1080 or 1366x768
            # $3 is output file
            convert $1 -resize $2\! $3
        }
        ;;
esac

# clone from aur.archlinux.org
function gitaur {
    git clone https://aur.archlinux.org/$1
}

function sandoc {
    sdcf="/tmp/sdcfile.md"
    if [ -f header.md ]; then
        cat header.md > $sdcf;
    fi
    iconv -t utf-8 $1.md >> $sdcf;
    pandoc -f markdown_github+escaped_line_breaks-blank_before_header+backtick_code_blocks+fancy_lists+table_captions+pipe_tables+pandoc_title_block -V geometry:margin=1in -V papersize:A4 -V fontsize:11pt -V monofont:Terminus -So $1.pdf $sdcf
}

if [[ "$HOST" == "think" ]]; then
    wifi="wlp3s0"
    eth0="enp0s25"
    function ifup {
        case $1 in
            "wifi")
                sudo ip link set $wifi up
                echo -n "\e[32m"
                echo "starting wifi"
                ;;
            "lan")
                sudo systemctl start dhcpcd@$eth0
                sudo ip link set $eth0 up
                echo -n "\e[32m"
                echo "starting lan"
                ;;
            *)
                echo "\e[31muse 'wifi' or 'lan' interface"
                ;;
        esac
        echo -n "\e[0m"
    }

    function ifdown {
        case $1 in
            "wifi")
                sudo ip link set $wifi down
                echo -n "\e[32m"
                echo "shutting down wifi"
                ;;
            "lan")
                sudo systemctl stop dhcpcd@$eth0
                sudo ip link set $eth0 down
                echo -n "\e[32m"
                echo "shutting down lan"
                ;;
            *)
                echo "\e[31muse 'wifi' or 'lan' interface"
                ;;
        esac
        echo -n "\e[0m"
    }
fi

# used for backwards compatability
function aurinstall {
    yaourt -S $1
}

# SETUP BACKGROUNDs
source $HOME/.feh_constants.sh

# ALLOW SETTING OF PICTURES AS BG
function setbg {
    # $1 is file
    # $2 is time
    #    out of night, morning, midday, afternoon, evening
    function tell {
        echo "copying \e[32m$1\e[0m to \e[32m$2\e[0m"
        rm $2
        convert $1 $2
    }
    case $2 in
        "night")
            tell $1 $TBG_NIGHT
            ;;
        "morning")
            tell $1 $TBG_MORNING
            ;;
        "midday")
            tell $1 $TBG_MIDDAY
            ;;
        "afternoon")
            tell $1 $TBG_AFTERNOON
            ;;
        "evening")
            tell $1 $TBG_EVENING
            ;;
        *)
            echo "you need to specify at which time to"
            echo "show the wallpaper:"
            echo "\e[37m{night, morning, midday, afternoon, evening}\e[0m"
            echo "you can use '\e[37mwallpaper file resolution output\e[0m'"
            echo "to get the file in the correct resolution"
    esac
    convert $TBG_MORNING $TBG_MIDDAY $TBG_AFTERNOON $TBG_EVENING $TBG_NIGHT +append $HOME/.bg.preview.jpg
}

# note taking function
function note {
    case $@ in
        "-e") vim ~/.note;;
        "") cat ~/.note|less;;
        *) echo -e "$@\n" >> ~/.note
            echo -e "\033[0;37m\"$@\" \033[1;30madded to your notes.\033[0m\n";;
    esac
}

# zsh syntax highlighting
zshsynt="/usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
if [[ -f $zshsynt ]]; then
    source $zshsynt
else
    echo "You need to download the zsh-syntax-highlighting file"
    read -p "do you want to download it? [Y/n]" answ
    case $answ in
        [Yy])
            echo "root is required to install zsh-syntax-highlighting"
            wget -O $zshsynt "https://raw.githubusercontent.com/zsh-users/zsh-syntax-highlighting/master/zsh-syntax-highlighting.zsh"
            ;;
        [Nn])
            echo "root is required to disable this prompt:"
            sudo touch $zshsynt
            ;;
        *)
            echo "answer not recognized, you will be asked again next time"
    esac
fi

